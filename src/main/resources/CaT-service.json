{
  "openapi": "3.0.0",
  "info": {
    "title": "Tenders API",
    "description": "Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.",
    "version": "0.1.9"
  },
  "servers": [
    {
      "url": "http://api.example.com/v1",
      "description": "Optional server description, e.g. Main (production) server"
    },
    {
      "url": "http://staging-api.example.com",
      "description": "Optional server description, e.g. Internal staging server for testing"
    }
  ],
  "paths": {
    "/tenders/projects/salesforce": {
      "post": {
        "tags": [
          "eSourcing",
          "Create Procurement Project"
        ],
        "description": "Creates a new CCS procurement case in the Jaggaer eSourcing platform.",
        "operationId": "app.createProcurementCase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceProjectTender"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success (for object creation). Its information is available in the data field at the top level of the response body. The API URL where the object can be retrieved is also returned in the Location header of the response.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DraftProcurementProject"
                    },
                    {
                      "$ref": "#/components/schemas/SalesforceProjectTender200Response"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest"
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          },
          "504": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/504GatewayTimeout"
          },
          "default": {
            "description": "successful operation"
          }
        },
        "summary": "Create Project from an Salesforce data"
      }
    },
    "/tenders/projects/deltas": {
      "get": {
        "deprecated": true,
        "tags": [
          "eSourcing"
        ],
        "summary": "US3-6 - Update an ITT event's details (in Salesforce) when it has been published on the eSourcing platform to the invited suppliers.",
        "operationId": "app.putstatus",
        "parameters": [
          {
            "in": "query",
            "name": "lastSuccessRun",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "dd/mm/yy:hh:mm:ss",
            "required": true,
            "description": "Date and Time stamp of last successful run."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Release"
                  }
                }
              }
            },
            "description": "Accepted"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        }
      }
    },
    "/cat/account/{self}/tsandcs": {
      "parameters": [
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SelfParam"
        }
      ],
      "get": {
        "description": "Retrieve the terms and conditions required for CaT and if the user has signed up to them.",
        "tags": [
          "Ts and Cs"
        ],
        "operationId": "Ts and Cs",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/TsAndCs"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "openID": [
              "read",
              "write"
            ]
          }
        ],
        "summary": "Ts and Cs"
      }
    },
    "/cat/organisations/{orgID}/teams": {
      "parameters": [
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/OrgParam"
        }
      ],
      "get": {
        "description": "Retrieve a list of CaT teams created by the organisation.",
        "tags": [
          "Teams"
        ],
        "operationId": "Org Teams",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamList"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "summary": "List of organisations teams",
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ]
      },
      "post": {
        "description": "Create a new Team.",
        "tags": [
          "Teams"
        ],
        "operationId": "Create Team",
        "requestBody": {
          "content": {
            "application/vnd.api+json:": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "TeamID for the newly created Team",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Create a new team"
      }
    },
    "/cat/organisations/{orgID}/teams/{teamID}": {
      "parameters": [
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/OrgParam"
        },
        {
          "$ref": "#/components/parameters/TeamParam"
        }
      ],
      "delete": {
        "description": "Delete the CaT team within the organisation.",
        "tags": [
          "Teams"
        ],
        "operationId": "Delete Team",
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success"
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Delete team"
      }
    },
    "/cat/organisations/{orgID}/teams/{teamID}/members": {
      "parameters": [
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/OrgParam"
        },
        {
          "$ref": "#/components/parameters/TeamParam"
        }
      ],
      "get": {
        "description": "Retrieve a list of members of a team..",
        "tags": [
          "Teams"
        ],
        "operationId": "Team Members",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberList"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "List of Team members"
      }
    },
    "/cat/organisations/{orgID}/teams/{teamID}/members/{teamMemberID}": {
      "parameters": [
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/OrgParam"
        },
        {
          "$ref": "#/components/parameters/TeamParam"
        },
        {
          "$ref": "#/components/parameters/TeamMemberParam"
        }
      ],
      "put": {
        "description": "Add a team member to a team.",
        "tags": [
          "Teams"
        ],
        "operationId": "Add Team Member",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMember"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success"
          },
          "201": {
            "description": "Added the Team Member who didnt exist",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Add team member"
      },
      "delete": {
        "description": "Delete the CaT team within the organisation.",
        "tags": [
          "Teams"
        ],
        "operationId": "Delete Team Member",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberList"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Delete a team member from the team."
      }
    },
    "/cat/accounts/{self}/teams": {
      "parameters": [
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SelfParam"
        }
      ],
      "get": {
        "description": "Retrieve a list of CaT teams that the user is a member of.",
        "tags": [
          "Teams"
        ],
        "operationId": "Users Teams",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamList"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "List of users teams"
      }
    },
    "/tenders/EventTypes": {
      "get": {
        "description": "Retrieve a list of Event (RFx) Types we can choose from",
        "tags": [
          "Base Data"
        ],
        "operationId": "rfx Types",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EventTypes"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "List Procurement Event types"
      }
    },
    "/tenders/projects/defaultName/agreements/{agreementID}/lots/{lotID}": {
      "parameters": [
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/AgreementParam"
        },
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/LotParam"
        }
      ],
      "get": {
        "deprecated": true,
        "description": "Retrieve a default name for a Procurement Case using a given agreement.",
        "tags": [
          "Create Procurement Project"
        ],
        "operationId": "Default Name",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultName"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get Default Name"
      }
    },
    "/tenders/projects/GMTransfer": {
      "post": {
        "description": "Create a new Team.",
        "tags": [
          "Create Procurement Project"
        ],
        "operationId": "CreateGMCase",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProcurementProject"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Tranfer from Guided Match"
      }
    },
    "/tenders/projects/FMTransfer": {
      "post": {
        "deprecated": true,
        "description": "Create Facilities Management procurement case.",
        "tags": [
          "Create Procurement Project"
        ],
        "operationId": "CreateFMCase",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProcurementProject"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Transfer from Facilities Managment"
      }
    },
    "/tenders/projects/BaTTransfer": {
      "post": {
        "deprecated": true,
        "description": "Create procurement case based on BaT data when it becomes apparent more suited to CaT.",
        "tags": [
          "Create Procurement Project"
        ],
        "operationId": "CreateBaTTransfer",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/CAT_initial/bat/bat-schema.yaml#/components/schemas/BasketID"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProcurementProject"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Transfer from Buy a Thing"
      }
    },
    "/tenders/projects/agreements": {
      "post": {
        "description": "Create a new procurement for the chosen Agreement.",
        "tags": [
          "Create Procurement Project"
        ],
        "operationId": "CreateAgreementCase",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AgreementDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProcurementProject"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Create Project from an Agreement (SCC-440)"
      }
    },
    "/tenders/projects/{procID}/confirm": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        }
      ],
      "post": {
        "deprecated": true,
        "description": "Confirm the details transfered or created for the agreement are what the user wants.",
        "tags": [
          "Create Procurement Project"
        ],
        "operationId": "ConfirmProcurementProject",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Release"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Confirm procurement project"
      }
    },
    "/tenders/projects": {
      "get": {
        "description": "Lists the projects the user has access too within the filters imposed. Filters include active/archived, summary/OCDS,",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "RettrieveProcurementProjects",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPackageSummary"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Retrieve procurement projects that match criteria"
      }
    },
    "/tenders/projects/{procID}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        }
      ],
      "get": {
        "description": "Confirm the details transfered or created for the agreement are what the user wants.",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "ProjectPackage",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPackage"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Retrieve the OCDS Package for a given project"
      }
    },
    "/tenders/projects/{procID}/close/options": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        }
      ],
      "get": {
        "description": "Get the options available to close a project.",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "ProcurementProjectCloseOptions",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTerminationType"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get options to close project"
      }
    },
    "/tenders/projects/{procID}/users": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        }
      ],
      "get": {
        "description": "Get the users who can edit the project.",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "GetProjectUsers",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberList"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get project users"
      }
    },
    "/tenders/projects/{procID}/users/{userID}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/UserParam"
        }
      ],
      "delete": {
        "description": "Get the options available to close a project.",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "DeleteProjectUsers",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberList"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Remove the users access to the project"
      },
      "put": {
        "description": "Add project access for the user.",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "AddProjectUser",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberList"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Add a project user"
      }
    },
    "/tenders/projects/{procID}/events{eventID}/questions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "get": {
        "description": "Get the Needs required for this Event",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "Get Event Questions",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Criterion"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get all Questions at all levels."
      }
    },
    "/tenders/projects/{procID}/events{eventID}/evals": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "get": {
        "description": "Get the Needs required for this Event",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "Get Eval Criterion",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EvalCriteria"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get Event Evaluation Criteria"
      }
    },
    "/tenders/projects/{procID}/events{eventID}/evals/{criterionID}/groups": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "#/components/parameters/CriterionParam"
        }
      ],
      "get": {
        "description": "Get the Needs required for this Event",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "GetEvalCriterionGroup",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionGroup"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get Event Evaluation Criteria Groups"
      },
      "post": {
        "description": "Create a Group within this Eval",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "CreateEvalCriterionGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Confirm procurement project"
      }
    },
    "/tenders/projects/{procID}/events{eventID}/evals/{criterionID}/groups/{groupID}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "#/components/parameters/CriterionParam"
        },
        {
          "$ref": "#/components/parameters/GroupParam"
        }
      ],
      "put": {
        "description": "Create a Group within this Eval",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "EditEvalCriterionGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Confirm procurement project"
      },
      "delete": {
        "description": "Delete a Group within this Eval",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "DeleteEvalCriterionGroup",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionGroup"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Delete project users"
      }
    },
    "/tenders/projects/{procID}/events{eventID}/evals/{criterionID}/groups/{groupID}/questions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "#/components/parameters/CriterionParam"
        },
        {
          "$ref": "#/components/parameters/GroupParam"
        }
      ],
      "get": {
        "description": "Get the Needs required for this Event",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "Get Eval Criterion Group Questions",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionSummary"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get Event Evaluation Criteria Groups"
      },
      "post": {
        "description": "Create a Question within this group",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "CreateEvalGroupQuestion",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Confirm procurement project"
      }
    },
    "/tenders/projects/{procID}/events{eventID}/evals/{criterionID}/groups/questions/{questionID}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "#/components/parameters/CriterionParam"
        },
        {
          "$ref": "#/components/parameters/NeedParam"
        }
      ],
      "get": {
        "description": "Get the Needs required for this Event",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "Get Eval Criterion Group Question",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get Event Evaluation Criteria Groups"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/needs/{questionID}/forms": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "#/components/parameters/NeedParam"
        }
      ],
      "get": {
        "deprecated": true,
        "description": "Get form data for this need.",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "HLNeedForm",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Criterion"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get HL Need forms"
      },
      "put": {
        "deprecated": true,
        "description": "Updates form data for a High Level Need.",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "updateHLNeedForm",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Requirement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Confirm procurement case"
      }
    },
    "/tenders/projects/{procID}/events{eventID}/needs/{questionID}/documents": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "#/components/parameters/NeedParam"
        }
      ],
      "get": {
        "deprecated": true,
        "description": "Get documents associated with the need for a given event in a Procurement Project.",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "HLNeedDocument",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get Default Name"
      },
      "put": {
        "deprecated": true,
        "description": "Update Document for a High Level Need for the project.",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "updateHLNeedDocument",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Update HL Need document"
      }
    },
    "/tenders/projects/{procID}/close": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        }
      ],
      "put": {
        "description": "Close the Procurement Project with an option allowed.",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "ProcurementProjectClose",
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success"
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Close procurement project"
      }
    },
    "/tenders/projects/{procID}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        }
      ],
      "get": {
        "description": "Get Events status's for this Project (Is this the same as get RFx's?)",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "RFXStatus",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/ProcessStage"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get get Event statuses on Procurement Project"
      }
    },
    "/tenders/projects/{procID}/events": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        }
      ],
      "get": {
        "description": "Get Event's for this Project. In OCDS this is the related cases of Type",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "caseRFXs",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EventStatus"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get Event's for the Procurement Project"
      },
      "post": {
        "description": "Creates a new Event for the Procurement Project.",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "createCaseRFx",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Tender"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EventStatus"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Create a Procurement Event"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/needs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "get": {
        "deprecated": true,
        "description": "Get the needs required for the Event for this Project",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "needs",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Criterion"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get Event Needs"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/Needs/{questionID}/documents": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "#/components/parameters/NeedParam"
        }
      ],
      "get": {
        "deprecated": true,
        "description": "Get documents associated with the need for a given event in a Procurement Project.",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "NeedDocument",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get Default Name"
      },
      "put": {
        "deprecated": true,
        "description": "Creates a new RFx for the case.",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "updateNeedDocument",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Confirm procurement case"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/suppliers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "get": {
        "description": "Get RFx's for this case",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "Suppliers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/OrganizationReference"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "List Suppliers on RFx"
      },
      "post": {
        "description": "Creates a new RFx for the case.",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "addSupplier",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/OrganizationReference"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/201Success"
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Update Suppliers on RFx"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/suppliers/{supplierID}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam"
        }
      ],
      "delete": {
        "description": "Creates a new RFx for the case.",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "removeSuppliers",
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success"
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Update Suppliers on RFx"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "get": {
        "description": "Gets Summary Data for RFx",
        "tags": [
          "Define Procurement Event"
        ],
        "operationId": "RFxSummary",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Tender"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get RFx Summary"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/GotoMarket/options": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "get": {
        "description": "Get the options open to go to market",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "GoToMarketOptions",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_CodeLists.yaml#/components/schemas/ProcurementMethod"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get Go to market options for an event"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/GotoMarket/": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "put": {
        "description": "Release the Event to the market.",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "GotoMarket",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/ProcurementMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success"
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Go to market for an event"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/GotoMarket/extend": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "put": {
        "description": "Extend the end date for responses to the Event.",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "extendRFx",
        "requestBody": {
          "content": {
            "application/vnd.api+json:": {
              "schema": {
                "$ref": "#/components/schemas/ExtendCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success"
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Extend the event"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "get": {
        "description": "Gets the status of a an event within a process.",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "RFxStatus",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/ProcessStage"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get Event status"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/responses": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "get": {
        "description": "Get responses from all suppliers",
        "tags": [
          "View Responses"
        ],
        "operationId": "allResponses",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/RequirementResponse"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get all responses to an RFx"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/responses/suppliers/{supplierID}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam"
        }
      ],
      "get": {
        "description": "Get responses from a supplier",
        "tags": [
          "View Responses"
        ],
        "operationId": "SupplierResponses",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/RequirementResponse"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get responses from a supplier to an RFx"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/responses/{responseID}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "#/components/parameters/ResponseParam"
        }
      ],
      "get": {
        "description": "Get responses Details",
        "tags": [
          "View Responses"
        ],
        "operationId": "ResponseDetail",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/RequirementResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get response details"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/responses/{responseID}/needs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "#/components/parameters/ResponseParam"
        }
      ],
      "get": {
        "description": "Get a list of HL Needs within the response for the RFx within the Procurement event. (May only ever be one in List). Indicates which have mandatory details complete. Offline will just verify file exists)",
        "tags": [
          "View Responses"
        ],
        "operationId": "HLNeedsResponse",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/RequirementResponse"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get responses to a need"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/responses/{responseID}/needs/{questionID}/forms": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "#/components/parameters/ResponseParam"
        },
        {
          "$ref": "#/components/parameters/NeedParam"
        }
      ],
      "get": {
        "description": "Gets the response data held within the needs form specified (May be blank, pre-populated or contain data previously entered)",
        "tags": [
          "View Responses"
        ],
        "operationId": "HLNeedsFormResponse",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/RequirementResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get response details"
      },
      "put": {
        "description": "Updates Suppliers response to High Level needs fields",
        "tags": [
          "Supplier Responds"
        ],
        "operationId": "updateHLNeedFormResponse",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Update form response"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/responses/{responseID}/needs/{questionID}/documents": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "#/components/parameters/ResponseParam"
        },
        {
          "$ref": "#/components/parameters/NeedParam"
        }
      ],
      "get": {
        "description": "Gets a file that can be updated off line and then uploaded when complete. (Should this always be blank or only the first time?)",
        "tags": [
          "View Responses"
        ],
        "operationId": "HLNeedsDocumentResponse",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get response details"
      },
      "post": {
        "description": "Replaces the response file stored against this need.",
        "tags": [
          "Supplier Responds"
        ],
        "operationId": "updateHLNeedDocumentResponse",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Update document response"
      }
    },
    "/tenders/projects/{procID}/Events/{eventID}/responses/suppliers/{supplierID}/complete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam"
        }
      ],
      "post": {
        "description": "Indicates that the Supplier is happy for the response to go to the Buyer",
        "tags": [
          "Supplier Responds"
        ],
        "operationId": "supplierResponseComplete",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Supplier Complete"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/responses/furtherInfo": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "get": {
        "description": "Get a request for further information (includes free text and any files}",
        "tags": [
          "Messaging"
        ],
        "operationId": "furtherInfoRequest",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Enquiry"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Request Further Info"
      },
      "post": {
        "description": "Create a new porocurement for the chosen Agreement.",
        "tags": [
          "Messaging"
        ],
        "operationId": "createFurtherInfoRequest",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Enquiry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Create further info request"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/responses/suppliers/{supplierID}/furtherInfo": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam"
        }
      ],
      "get": {
        "description": "Get a request for further information (includes free text and any files}",
        "tags": [
          "Messaging"
        ],
        "operationId": "supplierFurtherInfoRequest",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Enquiry"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Request Supplier Further Info"
      },
      "post": {
        "description": "Create a new porocurement for the chosen Agreement.",
        "tags": [
          "Messaging"
        ],
        "operationId": "createSupplierFurtherInfoRequest",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Enquiry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Create supplier further info request"
      },
      "put": {
        "description": "Respond to a Request for further information",
        "tags": [
          "Supplier Responds"
        ],
        "operationId": "supplierFurtherInfo",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Resturn Further Info"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/responses/export": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "get": {
        "description": "Export all responses for all suppliers on an RFx",
        "tags": [
          "View Responses"
        ],
        "operationId": "exportAllResponses",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/msword": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Export all responses"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/scores": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "get": {
        "description": "Get scores for all suppliers on an RFx",
        "tags": [
          "Scoring"
        ],
        "operationId": "allScores",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "400": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest"
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get all scores for an RFx"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/scores/suppliers/{supplierID}/'": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam"
        }
      ],
      "put": {
        "description": "Updates a suppliers score for an RFx",
        "tags": [
          "Scoring"
        ],
        "operationId": "SupplierScore",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Update supplier score"
      }
    },
    "/tenders/events": {
      "get": {
        "description": "Gets Events that have not been responded to\n* Procurements Events Issued (Supplier)\n* Responses to Procurement events (Buyer)\n* Procurement Events Closed (Buyer/Supplier)\n* Procurement Events Terminated (Supplier)\n* Request for further Information (Supplier)\n* Response to further information (Buyer)\n* Awards (Supplier)\n* Procurement Cases Terminated (Supplier)\n* Contract Signature (Buyer/Supplier) \n",
        "tags": [
          "Notification"
        ],
        "operationId": "events",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Get all scores for an RFx"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/termination/options": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        },
        {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam"
        }
      ],
      "get": {
        "description": "Respond to a Request for further information",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "terminateOptions",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminationTypes"
                }
              }
            }
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Request options for termination"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/termination": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "put": {
        "description": "Terminate the RFx",
        "tags": [
          "Manage Procurement Project",
          "eSourcing"
        ],
        "operationId": "terminate",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminationType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success"
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Terminate RFx"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/awards/": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "put": {
        "description": "Awards the contract to a supplier. RFx must be of type RFP",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "award",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Award"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success"
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "buyer"
            ]
          }
        ],
        "summary": "Award Procurement"
      }
    },
    "/tenders/projects/{procID}/events/{eventID}/signed/": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ProcurementParam"
        },
        {
          "$ref": "#/components/parameters/EventParam"
        }
      ],
      "put": {
        "description": "Indicate the contract has been signed.",
        "tags": [
          "Manage Procurement Project"
        ],
        "operationId": "signed",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Contract"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success"
          },
          "401": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden"
          },
          "429": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError"
          },
          "502": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway"
          }
        },
        "security": [
          {
            "OAuth2": [
              "write"
            ]
          },
          {
            "openID": [
              "write"
            ]
          }
        ],
        "summary": "Sign Procurement"
      }
    }
  },
  "components": {
    "parameters": {
      "TeamParam": {
        "name": "teamID",
        "in": "path",
        "required": true,
        "description": "Team ID",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
        }
      },
      "TeamMemberParam": {
        "name": "teamMemberID",
        "in": "path",
        "required": true,
        "description": "Team member ID",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
        }
      },
      "GMParam": {
        "name": "GuidedMatchHistoryID",
        "in": "query",
        "required": true,
        "description": "Guided Match ID",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
        }
      },
      "FMParam": {
        "name": "FMID",
        "in": "query",
        "required": true,
        "description": "Facilities Management Transfer ID",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
        }
      },
      "ProcurementParam": {
        "name": "procID",
        "in": "path",
        "required": true,
        "description": "Procurement Project ID",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/ProcurementID"
        }
      },
      "EventParam": {
        "name": "eventID",
        "in": "path",
        "required": true,
        "description": "Procurement Event ID",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
        }
      },
      "CriterionParam": {
        "name": "criterionID",
        "in": "path",
        "required": true,
        "description": "Criterion ID",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
        }
      },
      "GroupParam": {
        "name": "groupID",
        "in": "path",
        "required": true,
        "description": "Question Group ID",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
        }
      },
      "NeedParam": {
        "name": "questionID",
        "in": "path",
        "required": true,
        "description": "Procurement Need ID",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
        }
      },
      "ResponseParam": {
        "name": "responseID",
        "in": "path",
        "required": true,
        "description": "Response ID to a Procurement Need",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
        }
      }
    },
    "schemas": {
      "SalesforceProjectTender": {
        "type": "object",
        "required": [
          "subject",
          "procurementReference",
          "rfx"
        ],
        "properties": {
          "tenderReferenceCode": {
            "type": "string",
            "example": "project_1078"
          },
          "subject": {
            "type": "string",
            "example": "Project for Provision of Face Masks"
          },
          "procurementReference": {
            "type": "string",
            "example": "324233324"
          },
          "rfx": {
            "$ref": "#/components/schemas/SalesforceRfx"
          }
        }
      },
      "SalesforceRfx": {
        "title": "Rfx",
        "type": "object",
        "required": [
          "shortDescription",
          "value",
          "publishDate",
          "closeDate",
          "procurementRoute"
        ],
        "properties": {
          "shortDescription": {
            "type": "string",
            "example": "RFQ for Provision of PPE"
          },
          "rfiFlag": {
            "type": "string",
            "example": "1"
          },
          "value": {
            "type": "string",
            "example": 0
          },
          "templateReferenceCode": {
            "type": "string",
            "example": "itt_543"
          },
          "qualEnvStatus": {
            "type": "string",
            "example": 0
          },
          "techEnvStatus": {
            "type": "string",
            "example": 1
          },
          "commEnvStatus": {
            "type": "string",
            "example": 0
          },
          "publishDate": {
            "type": "string",
            "example": "2021-01-28T12:00:00.000+00:00"
          },
          "closeDate": {
            "type": "string",
            "example": "2021-02-27T12:00:00.000+00:00"
          },
          "visibilityEGComments": {
            "type": "string",
            "example": 1
          },
          "rankingStrategy": {
            "type": "string",
            "example": "BEST_TECHNICAL_SCORE"
          },
          "procurementRoute": {
            "type": "string",
            "example": "Call Off (Competition)"
          },
          "frameworkName": {
            "type": "string",
            "example": "TT3242"
          },
          "frameworkLotNumber": {
            "type": "string",
            "example": "Lot 1"
          },
          "frameworkRMNumber": {
            "type": "string",
            "example": 12345
          }
        }
      },
      "SalesforceProjectTender200Response": {
        "type": "object",
        "properties": {
          "tenderReferenceCode": {
            "type": "string",
            "description": "project code (project id)",
            "example": "project_1063"
          },
          "rfxReferenceCode": {
            "type": "string",
            "description": "the itt code (tender id)",
            "example": "itt_586"
          }
        }
      },
      "TeamID": {
        "type": "number",
        "format": "integer",
        "example": 1234,
        "readOnly": true
      },
      "TeamMemberID": {
        "type": "number",
        "format": "integer",
        "example": 1234
      },
      "TeamList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Team"
        }
      },
      "Team": {
        "type": "object",
        "description": "Team who work together on bids or procurements",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "description": "Unique Identifier for the team.",
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TeamID"
              }
            ]
          },
          "organisation": {
            "description": "Organisation that has defined the team",
            "allOf": [
              {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/OrgID"
              }
            ]
          },
          "name": {
            "type": "string",
            "default": "UAH",
            "description": "Name given to the team within the organisation",
            "example": "Procurment Team A"
          }
        }
      },
      "TeamMemberList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TeamMember"
        }
      },
      "TeamMember": {
        "type": "object",
        "description": "Team who work together on bids or procurements",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid",
            "description": "ID of the team member",
            "example": 222
          },
          "contact": {
            "allOf": [
              {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/ContactPoint"
              }
            ],
            "properties": {
              "name": {
                "description": "Name of the tream member"
              },
              "email": {
                "description": "eMail address of the tream member"
              },
              "telephone": {
                "description": "Telephone number of the tream member"
              },
              "faxNumber": {
                "description": "Fax number of the tream member"
              },
              "url": {
                "description": "URL of the tream member"
              }
            }
          }
        }
      },
      "AgreementDetails": {
        "type": "object",
        "properties": {
          "agreementID": {
            "allOf": [
              {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/AgreementID"
              }
            ],
            "readOnly": false
          },
          "lotID": {
            "allOf": [
              {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/LotID"
              }
            ],
            "readOnly": false
          }
        }
      },
      "ExtendCriteria": {
        "description": "Data required to extend the period for tender submissions. It must not exceed the orginal extention limit defined on a tender. type: object",
        "properties": {
          "endDate": {
            "title": "End date",
            "description": "The new end date for the period. ",
            "type": "string",
            "nullable": true,
            "format": "date-time"
          }
        }
      },
      "ProjectPackageSummary": {
        "title": "Project Package Summary",
        "description": "The project package contains a list of Event records within a single Procurement Project along with some publishing metadata. The Event Records pull together all the releases of a procurement process under a single Open Contracting ID and compile them into the latest version of the information along with the history of any data changes. This summary shows the primary fields of the project package and supporting data including the active event. Following the URI will provide the project details in OIDC format.",
        "type": "object",
        "properties": {
          "uri": {
            "title": "Package identifier",
            "description": "The URI of this package that identifies it uniquely in the world.",
            "type": "string",
            "example": "https://www.crowncommercial.gov.uk/tenders/projects/{ProcID}",
            "format": "uri"
          },
          "publishedDate": {
            "title": "Published date",
            "description": "The date that this package was published. If this package is generated 'on demand', this date should reflect the date of the last change to the underlying contents of the package.",
            "type": "string",
            "format": "date-time",
            "example": "01/01/2021"
          },
          "procurementID": {
            "type": "string"
          },
          "projectName": {
            "type": "string"
          },
          "supportId": {
            "type": "string"
          },
          "activeEvent": {
            "type": "object",
            "properties": {
              "eventId": {
                "type": "string"
              },
              "eventSuppordId": {
                "type": "string"
              },
              "eventType": {
                "type": "string"
              },
              "eventStage": {
                "type": "string"
              }
            }
          }
        }
      },
      "ProjectPackage": {
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/RecordPackage"
          }
        ],
        "title": "Project Package",
        "description": "The record package contains a list of Event records within a single procurement project along with some publishing metadata. The Event Records pull together all the releases of a procurement under a single Open Contracting ID and compile them into the latest version of the information along with the history of any data changes.",
        "type": "object",
        "properties": {
          "uri": {
            "title": "Package identifier",
            "description": "The URI of this package that identifies it uniquely in the world.",
            "type": "string",
            "example": "https://www.crowncommercial.gov.uk/tenders/projects/{ProcID}",
            "format": "uri"
          }
        }
      },
      "TerminationTypes": {
        "title": "Termination Options",
        "description": "Ways to terminate a tender. There are several types-\n\n  * cancelled\n  * unsucessful\n  * complete\n  * withdrawn",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TerminationType"
        },
        "example": [
          "cancelled",
          "unsuccessful",
          "complete",
          "withdrawn"
        ]
      },
      "TerminationType": {
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/TenderStatus"
          }
        ],
        "title": "Termination Type",
        "description": "Subset of the codes in [tenderStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#tender-status) codelist. This subset are those used to terminate an RFx.",
        "type": "object",
        "properties": {
          "terminationType": {
            "type": "string",
            "enum": [
              "cancelled",
              "unsuccessful",
              "complete",
              "withdrawn."
            ]
          }
        },
        "example": "cancelled"
      },
      "EventTypes": {
        "description": "Generic term for an event put out to the market. There are several types-\n\n  * EOI - Expression of Interest\n  * RFI -  Request for Information\n  * RFP - Request for Proposal",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EventType"
        },
        "example": [
          "EOI",
          "RFI",
          "RFP"
        ]
      },
      "EventType": {
        "title": "Event types",
        "description": "Generic term for an event put out to the market. There are several types-\n\n  * EOI - Expression of Interest\n  * RFI -  Request for Information\n  * RFP - Request for Proposal",
        "type": "string",
        "enum": [
          "EOI",
          "RFI",
          "RFP"
        ]
      },
      "EventStatus": {
        "description": "Generic term for an event put out to the market. Each is an optional procurement step in the procurement process. This casll shows the current status of each in the procurement process.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "projectID": {
              "type": "string",
              "example": "00002468",
              "description": "project_1055 mapped to CaT (project ID) 00002468"
            },
            "eventID": {
              "type": "string",
              "example": "00013579",
              "description": "itt_2468 mapped to CaT (eventID) 00013579"
            },
            "ocid": {
              "type": "string"
            },
            "supportID": {
              "type": "string",
              "example": "itt_2468",
              "description": "ID to allow support staff to support this event."
            },
            "name": {
              "type": "string",
              "example": "RM6118-Lot 2-Crown Commercial Services",
              "description": "Name of the event."
            },
            "type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EventType"
                }
              ],
              "example": "RFP"
            },
            "status": {
              "type": "string",
              "allOf": [
                {
                  "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/TenderStatus"
                }
              ]
            }
          }
        }
      },
      "ProjectTerminationType": {
        "title": "Project Termination Options",
        "description": "Subset of the codes in [tenderStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#tender-status) codelist. These are the statuses which the user can close the project. If the response is null then the project cannot be closed.",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "cancelled",
            "unsuccessful",
            "complete",
            "withdrawn."
          ]
        }
      },
      "DraftProcurementProject": {
        "type": "object",
        "properties": {
          "pocurementID": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
          },
          "eventID": {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
          },
          "defaultName": {
            "$ref": "#/components/schemas/DefaultName"
          }
        }
      },
      "DefaultName": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "<org>-<agreement>-<ID>"
          },
          "components": {
            "type": "object",
            "properties": {
              "org": {
                "type": "string",
                "example": "<org>"
              },
              "agreement": {
                "type": "string",
                "example": "<agreement>"
              },
              "identifier": {
                "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID"
              }
            }
          }
        }
      },
      "EvalCriteria": {
        "description": "Details of an Evaluation type. This is known as an Envelope or Criterion",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "QuestionGroup": {
        "description": "This is an arbitrary grouping of questions to make it within an individual Evaluation. Known as a Requirement Group in OCDS",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string"
          }
        }
      },
      "QuestionSummary": {
        "description": "This is summary of the questions within a Question Group",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dataType": {
            "type": "string"
          }
        }
      },
      "Question": {
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Requirement"
          }
        ]
      }
    },
    "securitySchemes": {
      "openID": {
        "type": "openIdConnect",
        "openIdConnectUrl": "https://accounts.google.com/.well-known/openid-configuration"
      },
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth",
            "tokenUrl": "https://oauth2.googleapis.com/token",
            "scopes": {
              "openid": "Standard scope",
              "email": "email",
              "profile": "profile",
              "supplier": "Grants access to act as a supplier",
              "buyer": "Grants access to act as a buyer",
              "admin": "Grants access to admin operations"
            }
          }
        }
      }
    }
  }
}