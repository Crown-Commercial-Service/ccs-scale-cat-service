#spring:
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          jwk-set-uri: "SET IN ENV"


logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web.client.RestTemplate: WARN
    org.apache.http: WARN
    uk.gov.crowncommercial.dts.scale.cat: DEBUG

spring:
  jpa:
    open-in-view: false
    database: postgresql
    show-sql: false
    hibernate:
      ddl-auto: validate
  datasource:
    hikari:
      connectionTimeout: 10000

server:
  error:
    path: "/error"

config:
  ocds:
    authority: ocds
    ocid-prefix: b5fd17
  retry:
    maxAttempts: 5
    multiplier: 2
    delay: 1000

  external:
    jaggaer:
#      baseUrl: "SET IN ENV"
      timeoutDuration: 5
      addDivisionToProjectTeam: false
      headerValueInvalidContentType: "; charset=UTF-8"
      headerValueWWWAuthenticate: 'Bearer error="invalid_or_missing_token"'

      rfxStatusToTenderStatus:
        0: PLANNED
        100: PLANNED
        200: PLANNED
        300: ACTIVE
        350: ACTIVE
        600: ACTIVE
        1300: ACTIVE
        400: ACTIVE
        750: ACTIVE
        800: ACTIVE
        900: ACTIVE
        500: COMPLETE
        950: COMPLETE
        1400: COMPLETE
        1100: WITHDRAWN
        1500: CANCELLED

      createProject:
        # CA-Lot-BuyerOrg e.g. RM1234-Lot1a-CCS
        defaultTitleFormat: "%s-%s-%s"
        endpoint: /esop/jint/api/public/ja/v1/projects
        templateId: tender_49
      getProject:
        endpoint: /esop/jint/api/public/ja/v1/projects/{id}
      createRfx:
        # ProjectName-EventType e.g. RM1234-Lot1a-CCS-RFP
        defaultTitleFormat: "%s-%s"
        endpoint: /esop/jint/api/public/ja/v1/rfxs/
        templateId: itt_445
      getBuyerCompanyProfile:
        # endpoint: /esop/jint/api/public/ja/v1/companyprofiles?comp=USER;SSO_CODE&flt=TYPE==GURU;SUBUSERLOGIN=={{PRINCIPAL}}
        endpoint: /esop/jint/api/public/ja/v1/companyprofiles?comp=USER;SSO_CODE&flt=TYPE==BUYER;BRAVOID==${config.external.jaggaer.self-service-id}
      getSupplierCompanyProfile:
        endpoint: /esop/jint/api/public/ja/v1/companyprofiles?comp=USER;SSO_CODE&flt=TYPE==SELLER;userEmail=={{PRINCIPAL}}        
      getSupplierSubUserProfile:
        endpoint: /esop/jint/api/public/ja/v1/companyprofiles?comp=USER;SSO_CODE&flt=TYPE==SELLER;SUBUSERLOGIN=={{PRINCIPAL}}
      exportRfx:
        endpoint: /esop/jint/api/public/ja/v1/rfxs/{id}

    agreementsService:
      # baseUrl: "SET IN ENV"
      # apiKey: "SET IN ENV"
      timeoutDuration: 5
      getAgreementDetail:
        uriTemplate: /agreements/{agreement-id}
      getLotDetailsForAgreement:
        uriTemplate: /agreements/{agreement-id}/lots/{lot-id}
      getLotEventTypeDataTemplates:
        uriTemplate: /agreements/{agreement-id}/lots/{lot-id}/event-types/{event-type}/data-templates
      getEventTypesForAgreement:
        uriTemplate: /agreements/{agreement-id}/lots/{lot-id}/event-types

    conclaveWrapper:
      # baseUrl: "SET IN ENV"
      # apiKey: "SET IN ENV"
      timeoutDuration: 5
      # Role keys are incorrectly spelt in Conclave
      buyerRoleKey: JAEGGER_BUYER
      supplierRoleKey: JAEGGER_SUPPLIER      
      getUser:
        uriTemplate: /user-profiles?user-id={user-id}
      getUserContacts:
        uriTemplate: /user-profiles/contacts?user-id={email}

---
spring:
  config:
    activate:
      on-profile:
        - cloud
        - local
        - local-pg

  # JAGGAER CONFIG
  security:
    oauth2:
      client:
#        provider:
#          jaggaer:
#            token-uri: "SET IN ENV"
        registration:
          jaggaer:
            authorization-grant-type: client_credentials
#            client-id: "SET IN ENV"
#            client-secret: "SET IN ENV"

---
spring:
  config:
    activate:
      on-profile:
        - local
  datasource:
    url: jdbc:h2:mem:tenders;MODE=PostgreSQL
  jpa:
    database: h2
    show-sql: true
    hibernate:
      ddl-auto: create-drop

---
spring:
  config:
    activate:
      on-profile:
        - cloud
        - local-pg
  jpa:
    database: postgresql
    show-sql: true
    hibernate:
      ddl-auto: validate

---
spring:
  config:
    activate:
      on-profile:
        - local-pg
  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/cat
