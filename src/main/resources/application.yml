#spring:
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          jwk-set-uri: "SET IN ENV"


logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web.client.RestTemplate: WARN
    org.apache.http: WARN
    uk.gov.crowncommercial.dts.scale.cat: DEBUG
    # org.eclipse.jetty.client: DEBUG

spring:
  jpa:
    open-in-view: false
    database: postgresql
    show-sql: false
    hibernate:
      ddl-auto: validate
  datasource:
    hikari:
      connectionTimeout: 10000
  servlet:
    multipart:
      max-file-size: 300MB # must match config.maxSize
      max-request-size: 300MB # must match config.maxSize

server:
  error:
    path: "/error"

config:
  ocds:
    authority: ocds
    ocid-prefix: b5fd17
  retry:
    maxAttempts: 5
    multiplier: 2
    delay: 1000
  document:
    allowedExtentions: 
      - csv
      - doc
      - docx
      - jpg
      - jpeg
      - kml
      - ods
      - odt
      - pdf
      - png
      - ppt
      - pptx
      - rdf
      - rtf
      - txt
      - xls
      - xlsx
      - xml
      - zip
    maxSize: 314572800 #300MB
    maxTotalSize: 1073741824 #1GB

  external:
    jaggaer:
#      baseUrl: "SET IN ENV"
      timeoutDuration: 10
      addDivisionToProjectTeam: false
      headerValueInvalidContentType: "; charset=UTF-8"
      headerValueWWWAuthenticate: 'Bearer error="invalid_or_missing_token"'
      defaultBuyerRightsProfile: "Non-CCS Call-Off Buyer"
      defaultSupplierRightsProfile: ""

      rfxStatusToTenderStatus:
        0: PLANNED
        100: PLANNED
        200: PLANNED
        300: ACTIVE
        350: ACTIVE
        600: ACTIVE
        1300: ACTIVE
        400: ACTIVE
        750: ACTIVE
        800: ACTIVE
        900: ACTIVE
        500: COMPLETE
        950: COMPLETE
        1400: COMPLETE
        1100: WITHDRAWN
        1000: CANCELLED

      rfxStatusAndEventTypeToTenderStatus:
        0:
          RFI:
            PLANNING
          EOI:
            PLANNING
          FC:
            PLANNING
          DA:
            PLANNING
        300:
          RFI:
            PLANNING
          EOI:
            PLANNING
          FC:
            ACTIVE
          DA:
            ACTIVE
        500:
          FC:
            COMPLETE
          DA:
            COMPLETE
        800:
          FC:
            ACTIVE
          DA:
            ACTIVE
        950:
          RFI:
            PLANNING
          EOI:
            PLANNING
          FC:
            COMPLETE
          DA:
            COMPLETE
        1000:
          RFI:
            CANCELLED
          EOI:
            CANCELLED
          FC:
            CANCELLED
          DA:
            CANCELLED

      createProject:
        # CA-Lot-BuyerOrg e.g. RM1234-Lot1a-CCS
        defaultTitleFormat: "%s-%s-%s"
        endpoint: /esop/jint/api/public/ja/v1/projects
        templateId: tender_49
      getProject:
        endpoint: /esop/jint/api/public/ja/v1/projects/{id}
      getProjectList:
        endpoint: /esop/jint/api/public/ja/v1/projects?flt={filters}
      createRfx:
        # ProjectName-EventType e.g. RM1234-Lot1a-CCS-RFP
        defaultTitleFormat: "%s-%s"
        endpoint: /esop/jint/api/public/ja/v1/rfxs/
        templateId: itt_9899
        
      # TODO / NB: Search via SSO data directly only works for super users (i.e. suppliers)
      getBuyerCompanyProfile:
        endpoint: /esop/jint/api/public/ja/v1/companyprofiles?comp=USER;SSO_CODE&flt=TYPE==BUYER;BRAVOID==${config.external.jaggaer.self-service-id}
      getSupplierCompanyProfileByBravoID:
        endpoint: /esop/jint/api/public/ja/v1/companyprofiles?comp=USER;SSO_CODE&flt=TYPE==SELLER;BRAVOID=={{PRINCIPAL}}        
      getSupplierCompanyProfileBySSOUserLogin:
        endpoint: /esop/jint/api/public/ja/v1/companyprofiles?comp=USER;SSO_CODE&flt=TYPE==SELLER;SSO_UserLogin=={{PRINCIPAL}};SSO_Code==OPEN_ID   
      getSupplierSubUserProfile:
        endpoint: /esop/jint/api/public/ja/v1/companyprofiles?comp=USER;SSO_CODE&flt=TYPE==SELLER;SUBUSERLOGIN=={{PRINCIPAL}}
        # endpoint: /esop/jint/api/public/ja/v1/companyprofiles?comp=USER;SSO_CODE&flt=TYPE==SELLER;SSO_UserLogin=={{PRINCIPAL}};SSO_Code==OPEN_ID
      exportRfx:
        endpoint: /esop/jint/api/public/ja/v1/rfxs/{id}
      createUpdateCompany:
        endpoint: /esop/jint/api/public/ja/v1/companyprofiles
      getAttachment:
        endpoint: /esop/jint/api/public/ja/v1/attachments?fileId={fileId}&fileName={fileName}
      publishRfx:
        endpoint: /esop/jint/api/public/ja/v1/rfxworkflows/publish
      extendRfx:
        endpoint: /esop/jint/api/public/ja/v1/rfxworkflows/extend
      getMessages:
        endpoint: /esop/jint/api/public/ja/v1/messages?flt={filters}&comp={components}&start={start}
      getMessage:
        endpoint: /esop/jint/api/public/ja/v1/messages/{message-id}?comp={components}
      startEvaluation:
        endpoint: /esop/jint/api/public/ja/v1/rfxworkflows/evaluations/start  
      invalidateEvent:
        endpoint: /esop/jint/api/public/ja/v1/rfxworkflows/invalidate
          
      # Temporary - SOAP API workaround for UPDATE/CREATE/DELETE user profile SSO data
      soap:
        profileManagementEndpoint: /esop/jint/services/ProfileManagement
        
      rpa: 
#       baseUrl: "SET IN ENV"
        accessUrl: /api/a/automation
        authenticationUrl: /api/token
#       userName: "SET IN ENV"
#       userPwd: "SET IN ENV"
#       buyerPwd: "SET IN ENV"
        source: CaT
        sourceId: 1
        profileName: ITTEvaluation
        timeoutDuration: 120
        requestTimeout: 3600000
        
    agreementsService:
      # baseUrl: "SET IN ENV"
      # apiKey: "SET IN ENV"
      timeoutDuration: 10
      getAgreementDetail:
        uriTemplate: /agreements/{agreement-id}
      getLotDetailsForAgreement:
        uriTemplate: /agreements/{agreement-id}/lots/{lot-id}
      getLotSuppliers:
        uriTemplate: /agreements/{agreement-id}/lots/{lot-id}/suppliers
      getLotEventTypeDataTemplates:
        uriTemplate: /agreements/{agreement-id}/lots/{lot-id}/event-types/{event-type}/data-templates
      getEventTypesForAgreement:
        uriTemplate: /agreements/{agreement-id}/lots/{lot-id}/event-types

    conclaveWrapper:
      # baseUrl: "SET IN ENV"
      # apiKey: "SET IN ENV"
      timeoutDuration: 10
      # Role keys are incorrectly spelt in Conclave
      buyerRoleKey: JAEGGER_BUYER
      supplierRoleKey: JAEGGER_SUPPLIER      
      getUser:
        uriTemplate: /user-profiles?user-id={user-id}
      getUserContacts:
        uriTemplate: /user-profiles/contacts?user-id={email}
        
      # Org ID is the internal ID
      getOrganisation:
        uriTemplate: /organisation-profiles/{org-id}
        
      # Org ID is {scheme}-{registry-id} e.g. US-DUN-123456789
      getOrganisationIdentity:
        uriTemplate: /identities/organisations/{org-id}
        
    docUploadSvc:
      timeoutDuration: 10
      awsRegion: eu-west-2
      documentStateProcessing: processing
      documentStateSafe: safe
      documentStateUnsafe: unsafe
      postDocument:
        uriTemplate: /documents
      getDocumentRecord:
        uriTemplate: /documents/{document-id}
      
  flags:
    # Prod env set to true
    resolveUsersBySSO: false
    # devMode: "SET IN ENV"
---
spring:
  config:
    activate:
      on-profile:
        - cloud
        - local
        - local-pg

  # JAGGAER CONFIG
  security:
    oauth2:
      client:
#        provider:
#          jaggaer:
#            token-uri: "SET IN ENV"
        registration:
          jaggaer:
            authorization-grant-type: client_credentials
#            client-id: "SET IN ENV"
#            client-secret: "SET IN ENV"

---
spring:
  config:
    activate:
      on-profile:
        - cloud
        - local-pg
  jpa:
    database: postgresql
    show-sql: false
    hibernate:
      ddl-auto: validate

---
spring:
  config:
    activate:
      on-profile:
        - local-pg
  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/cat
