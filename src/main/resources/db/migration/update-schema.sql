CREATE TABLE assessment_dimension_criteria
(
    assessment_dimension_criteria_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    assessment_id                    INTEGER,
    dimension_id                     INTEGER,
    criterion_id                     INTEGER,
    active                           BOOLEAN,
    created_by                       VARCHAR(255),
    created_at                       TIMESTAMP WITHOUT TIME ZONE,
    updated_by                       VARCHAR(255),
    updated_at                       TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessment_dimension_criteria PRIMARY KEY (assessment_dimension_criteria_id)
);

CREATE TABLE assessment_dimension_submission_types
(
    assessment_dimension_weighting_id INTEGER NOT NULL,
    dimension_submission_type_id      INTEGER NOT NULL,
    CONSTRAINT pk_assessment_dimension_submission_types PRIMARY KEY (assessment_dimension_weighting_id, dimension_submission_type_id)
);

CREATE TABLE assessment_dimension_weighting
(
    assessment_dimension_weighting_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    dimension_id                      INTEGER,
    assessment_id                     INTEGER,
    weighting_pct                     DECIMAL,
    created_by                        VARCHAR(255),
    created_at                        TIMESTAMP WITHOUT TIME ZONE,
    updated_by                        VARCHAR(255),
    updated_at                        TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessment_dimension_weighting PRIMARY KEY (assessment_dimension_weighting_id)
);

CREATE TABLE assessment_results
(
    assessment_result_id     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    assessment_id            INTEGER,
    supplier_organisation_id VARCHAR(255),
    assessment_result_value  DECIMAL,
    created_by               VARCHAR(255),
    created_at               TIMESTAMP WITHOUT TIME ZONE,
    updated_by               VARCHAR(255),
    updated_at               TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessment_results PRIMARY KEY (assessment_result_id)
);

CREATE TABLE assessment_selection_details
(
    assessment_selection_detail_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    assessment_selection_id        INTEGER,
    dimension_submission_type_id   INTEGER,
    requirement_value              DECIMAL,
    requirement_valid_value_code   VARCHAR(255),
    created_by                     VARCHAR(255),
    created_at                     TIMESTAMP WITHOUT TIME ZONE,
    updated_by                     VARCHAR(255),
    updated_at                     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessment_selection_details PRIMARY KEY (assessment_selection_detail_id)
);

CREATE TABLE assessment_selection_results
(
    assessment_selection_result_id    INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    assessment_selection_detail_id    INTEGER,
    assessment_selection_result_value DECIMAL,
    created_by                        VARCHAR(255),
    created_at                        TIMESTAMP WITHOUT TIME ZONE,
    updated_by                        VARCHAR(255),
    updated_at                        TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessment_selection_results PRIMARY KEY (assessment_selection_result_id)
);

CREATE TABLE assessment_selections
(
    assessment_selection_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    assessment_id           INTEGER,
    dimension_id            INTEGER,
    requirement_taxon_id    INTEGER,
    weighting_pct           DECIMAL,
    created_by              VARCHAR(255),
    created_at              TIMESTAMP WITHOUT TIME ZONE,
    updated_by              VARCHAR(255),
    updated_at              TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessment_selections PRIMARY KEY (assessment_selection_id)
);

CREATE TABLE assessment_taxon_dimensions
(
    assessment_taxon_dimension_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    assessment_taxon_id           INTEGER,
    dimension_id                  INTEGER,
    created_by                    VARCHAR(255),
    created_at                    TIMESTAMP WITHOUT TIME ZONE,
    updated_by                    VARCHAR(255),
    updated_at                    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessment_taxon_dimensions PRIMARY KEY (assessment_taxon_dimension_id)
);

CREATE TABLE assessment_taxons
(
    assessment_taxon_id        INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    submission_group_id        INTEGER,
    parent_assessment_taxon_id INTEGER,
    assessment_taxon_name      VARCHAR(255),
    permalink                  VARCHAR(255),
    assessment_taxon_descr     VARCHAR(255),
    created_by                 VARCHAR(255),
    created_at                 TIMESTAMP WITHOUT TIME ZONE,
    updated_by                 VARCHAR(255),
    updated_at                 TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessment_taxons PRIMARY KEY (assessment_taxon_id)
);

CREATE TABLE assessment_tool_dimensions
(
    assessment_tool_dimension_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    dimension_id                 INTEGER,
    assessment_tool_id           INTEGER,
    min_weighting_pct            DECIMAL,
    max_weighting_pct            DECIMAL,
    calculation_rule_id          INTEGER,
    exclusion_policy_id          INTEGER,
    created_by                   VARCHAR(255),
    created_at                   TIMESTAMP WITHOUT TIME ZONE,
    updated_by                   VARCHAR(255),
    updated_at                   TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessment_tool_dimensions PRIMARY KEY (assessment_tool_dimension_id)
);

CREATE TABLE assessment_tool_submission_group
(
    assessment_tool_submission_group_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    submission_group_id                 INTEGER,
    assessment_tool_id                  INTEGER,
    created_by                          VARCHAR(255),
    created_at                          TIMESTAMP WITHOUT TIME ZONE,
    updated_by                          VARCHAR(255),
    updated_at                          TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessment_tool_submission_group PRIMARY KEY (assessment_tool_submission_group_id)
);

CREATE TABLE assessment_tools
(
    assessment_tool_id          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    external_assessment_tool_id VARCHAR(255),
    assessment_tool_name        VARCHAR(255),
    assessment_tool_descr       VARCHAR(255),
    downselect_suppliers_ind    BOOLEAN,
    created_by                  VARCHAR(255),
    created_at                  TIMESTAMP WITHOUT TIME ZONE,
    updated_by                  VARCHAR(255),
    updated_at                  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessment_tools PRIMARY KEY (assessment_tool_id)
);

CREATE TABLE assessments
(
    assessment_id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    buyer_organisation_id VARCHAR(255),
    assessment_name       VARCHAR(255),
    status                VARCHAR(255),
    assessment_tool_id    INTEGER,
    created_by            VARCHAR(255),
    created_at            TIMESTAMP WITHOUT TIME ZONE,
    updated_by            VARCHAR(255),
    updated_at            TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_assessments PRIMARY KEY (assessment_id)
);

CREATE TABLE audit_log
(
    log_id        INTEGER NOT NULL,
    updated_by    VARCHAR(255),
    form_url      VARCHAR(255),
    reason        VARCHAR(255),
    before_update JSONB,
    after_update  JSONB,
    timestamp     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_audit_log PRIMARY KEY (log_id)
);

CREATE TABLE buyer_user_details
(
    user_id       VARCHAR(255) NOT NULL,
    user_password VARCHAR(255),
    exported      BOOLEAN,
    created_by    VARCHAR(255),
    created_at    TIMESTAMP WITHOUT TIME ZONE,
    updated_by    VARCHAR(255),
    updated_at    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_buyer_user_details PRIMARY KEY (user_id)
);

CREATE TABLE calculation_base
(
    id                   VARCHAR(255) NOT NULL,
    assessment_id        INTEGER,
    supplier_id          VARCHAR(255),
    assessment_tool_name VARCHAR(255),
    submission_type_name VARCHAR(255),
    dimension_name       VARCHAR(255),
    dimension_id         INTEGER,
    requirement_name     VARCHAR(255),
    submission_reference VARCHAR(255),
    submission_value     VARCHAR(255),
    adw_weighting_pct    DECIMAL,
    asel_weighting_pct   DECIMAL,
    requirement_value    DECIMAL,
    dimension_divisor    INTEGER,
    CONSTRAINT pk_calculation_base PRIMARY KEY (id)
);

CREATE TABLE cap_load_jobs
(
    role_cluster VARCHAR(255) NOT NULL,
    role_num     VARCHAR(255),
    role_family  VARCHAR(255),
    role_name    VARCHAR(255),
    role_level   VARCHAR(255),
    CONSTRAINT pk_cap_load_jobs PRIMARY KEY (role_cluster)
);

CREATE TABLE cap_load_resources
(
    resource_cluster VARCHAR(255) NOT NULL,
    resource_family  VARCHAR(255),
    CONSTRAINT pk_cap_load_resources PRIMARY KEY (resource_cluster)
);

CREATE TABLE cap_load_service_capability
(
    service_capability_hdr VARCHAR(255) NOT NULL,
    service_capability     VARCHAR(255),
    CONSTRAINT pk_cap_load_service_capability PRIMARY KEY (service_capability_hdr)
);

CREATE TABLE contract_details
(
    contract_id     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id        INTEGER,
    award_id        VARCHAR(255),
    contract_status VARCHAR(255),
    created_by      VARCHAR(255),
    created_at      TIMESTAMP WITHOUT TIME ZONE,
    updated_by      VARCHAR(255),
    updated_at      TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_contract_details PRIMARY KEY (contract_id)
);

CREATE TABLE dimension_submission_types
(
    dimension_submission_type_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    submission_type_code         VARCHAR(255),
    dimension_id                 INTEGER,
    selection_type               VARCHAR(255),
    submission_mandatory         BOOLEAN,
    created_by                   VARCHAR(255),
    created_at                   TIMESTAMP WITHOUT TIME ZONE,
    updated_by                   VARCHAR(255),
    updated_at                   TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_dimension_submission_types PRIMARY KEY (dimension_submission_type_id)
);

CREATE TABLE dimension_valid_values
(
    valid_value_name  VARCHAR(255),
    valid_value_descr VARCHAR(255),
    dimension_id      INTEGER      NOT NULL,
    valid_value_code  VARCHAR(255) NOT NULL,
    created_by        VARCHAR(255),
    created_at        TIMESTAMP WITHOUT TIME ZONE,
    updated_by        VARCHAR(255),
    updated_at        TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_dimension_valid_values PRIMARY KEY (dimension_id, valid_value_code)
);

CREATE TABLE dimensions
(
    dimension_id      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    dimension_name    VARCHAR(255),
    dimension_descr   VARCHAR(255),
    min_allowed_value DECIMAL,
    max_allowed_value DECIMAL,
    created_by        VARCHAR(255),
    created_at        TIMESTAMP WITHOUT TIME ZONE,
    updated_by        VARCHAR(255),
    updated_at        TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_dimensions PRIMARY KEY (dimension_id)
);

CREATE TABLE document_template_sources
(
    document_template_source_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    field_placeholder           VARCHAR(255),
    source_type                 VARCHAR(255),
    source_path                 VARCHAR(255),
    target_type                 VARCHAR(255),
    table_name                  VARCHAR(255),
    options_property            VARCHAR(255),
    conditional_value           VARCHAR(255),
    document_template_id        INTEGER,
    CONSTRAINT pk_document_template_sources PRIMARY KEY (document_template_source_id)
);

CREATE TABLE document_templates
(
    document_template_id        INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    template_url                VARCHAR(255),
    event_type                  VARCHAR(255),
    event_stage                 VARCHAR(255),
    commercial_agreement_number VARCHAR(255),
    lot_number                  VARCHAR(255),
    template_group              INTEGER,
    CONSTRAINT pk_document_templates PRIMARY KEY (document_template_id)
);

CREATE TABLE document_uploads
(
    document_upload_id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id             INTEGER,
    document_id          VARCHAR(255),
    external_document_id VARCHAR(255),
    external_status      VARCHAR(255),
    audience             VARCHAR(255),
    document_description VARCHAR(255),
    size                 BIGINT,
    mimetype             VARCHAR(255),
    created_by           VARCHAR(255),
    created_at           TIMESTAMP WITHOUT TIME ZONE,
    updated_by           VARCHAR(255),
    updated_at           TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_document_uploads PRIMARY KEY (document_upload_id)
);

CREATE TABLE gcloud_assessment_results
(
    gcloud_result_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    assessment_id    INTEGER,
    service_name     VARCHAR(255),
    supplier_name    VARCHAR(255),
    service_desc     VARCHAR(255),
    service_link     VARCHAR(255),
    created_by       VARCHAR(255),
    created_at       TIMESTAMP WITHOUT TIME ZONE,
    updated_by       VARCHAR(255),
    updated_at       TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_gcloud_assessment_results PRIMARY KEY (gcloud_result_id)
);

CREATE TABLE gcloud_assessments
(
    assessment_id    INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    assessment_name  VARCHAR(255),
    status           VARCHAR(255),
    external_tool_id INTEGER,
    dimension_reqs   VARCHAR(255),
    results_summary  VARCHAR(255),
    created_by       VARCHAR(255),
    created_at       TIMESTAMP WITHOUT TIME ZONE,
    updated_by       VARCHAR(255),
    updated_at       TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_gcloud_assessments PRIMARY KEY (assessment_id)
);

CREATE TABLE journeys
(
    journey_id      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    client_id       VARCHAR(255),
    external_id     VARCHAR(255),
    journey_details JSONB,
    created_by      VARCHAR(255),
    created_at      TIMESTAMP WITHOUT TIME ZONE,
    updated_by      VARCHAR(255),
    updated_at      TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_journeys PRIMARY KEY (journey_id)
);

CREATE TABLE lot_requirement_taxons
(
    lot_requirement_taxon_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    requirement_taxon_id     INTEGER,
    submission_group_id      INTEGER,
    created_by               VARCHAR(255),
    created_at               TIMESTAMP WITHOUT TIME ZONE,
    updated_by               VARCHAR(255),
    updated_at               TIMESTAMP WITHOUT TIME ZONE,
    lot_id                   INTEGER,
    CONSTRAINT pk_lot_requirement_taxons PRIMARY KEY (lot_requirement_taxon_id)
);

CREATE TABLE organisation_mapping
(
    organisation_mapping_id  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    organisation_id          VARCHAR(255),
    cas_organisation_id      VARCHAR(255),
    external_organisation_id INTEGER,
    primary_ind              BOOLEAN,
    created_by               VARCHAR(255),
    created_at               TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_organisation_mapping PRIMARY KEY (organisation_mapping_id)
);

CREATE TABLE procurement_events
(
    event_id                         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    project_id                       INTEGER,
    ocds_authority_name              VARCHAR(255),
    ocid_prefix                      VARCHAR(255),
    external_event_id                VARCHAR(255),
    external_reference_id            VARCHAR(255),
    event_name                       VARCHAR(255),
    event_type                       VARCHAR(255),
    down_selected_suppliers_ind      BOOLEAN,
    refresh_suppliers_ind            BOOLEAN,
    assessment_supplier_target       INTEGER,
    assessment_id                    INTEGER,
    tender_status                    VARCHAR(255),
    publish_date                     TIMESTAMP WITHOUT TIME ZONE,
    close_date                       TIMESTAMP WITHOUT TIME ZONE,
    created_by                       VARCHAR(255),
    created_at                       TIMESTAMP WITHOUT TIME ZONE,
    updated_by                       VARCHAR(255),
    updated_at                       TIMESTAMP WITHOUT TIME ZONE,
    procurement_template_payload     JSONB,
    template_id                      INTEGER,
    supplier_selection_justification VARCHAR(255),
    CONSTRAINT pk_procurement_events PRIMARY KEY (event_id)
);

CREATE TABLE procurement_projects
(
    project_id                  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    commercial_agreement_number VARCHAR(255),
    lot_number                  VARCHAR(255),
    external_project_id         VARCHAR(255),
    external_reference_id       VARCHAR(255),
    project_name                VARCHAR(255),
    organisation_mapping_id     INTEGER,
    created_by                  VARCHAR(255),
    created_at                  TIMESTAMP WITHOUT TIME ZONE,
    updated_by                  VARCHAR(255),
    updated_at                  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_procurement_projects PRIMARY KEY (project_id)
);

CREATE TABLE project_user_mapping
(
    project_user_mapping_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    project_id              INTEGER,
    user_id                 VARCHAR(255),
    deleted                 BOOLEAN                                  NOT NULL,
    created_by              VARCHAR(255),
    created_at              TIMESTAMP WITHOUT TIME ZONE,
    updated_by              VARCHAR(255),
    updated_at              TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_project_user_mapping PRIMARY KEY (project_user_mapping_id)
);

CREATE TABLE question_and_answer
(
    question_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id    INTEGER,
    question    VARCHAR(255),
    answer      VARCHAR(255),
    created_by  VARCHAR(255),
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    updated_by  VARCHAR(255),
    updated_at  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_question_and_answer PRIMARY KEY (question_id)
);

CREATE TABLE requirement_taxons
(
    requirement_taxon_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    requirement_id       INTEGER,
    assessment_taxon_id  INTEGER,
    created_by           VARCHAR(255),
    created_at           TIMESTAMP WITHOUT TIME ZONE,
    updated_by           VARCHAR(255),
    updated_at           TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_requirement_taxons PRIMARY KEY (requirement_taxon_id)
);

CREATE TABLE requirements
(
    requirement_id    INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    group_requirement BOOLEAN,
    requirement_name  VARCHAR(255),
    requirement_descr VARCHAR(255),
    created_by        VARCHAR(255),
    created_at        TIMESTAMP WITHOUT TIME ZONE,
    updated_by        VARCHAR(255),
    updated_at        TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_requirements PRIMARY KEY (requirement_id)
);

CREATE TABLE submission_group
(
    submission_group_id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    submission_group_desc          VARCHAR(255),
    submission_group_external_code VARCHAR(255),
    created_by                     VARCHAR(255),
    created_at                     TIMESTAMP WITHOUT TIME ZONE,
    updated_by                     VARCHAR(255),
    updated_at                     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_submission_group PRIMARY KEY (submission_group_id)
);

CREATE TABLE submission_types
(
    submission_type_code  VARCHAR(255) NOT NULL,
    submission_type_name  VARCHAR(255),
    submission_type_descr VARCHAR(255),
    created_by            VARCHAR(255),
    created_at            TIMESTAMP WITHOUT TIME ZONE,
    updated_by            VARCHAR(255),
    updated_at            TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_submission_types PRIMARY KEY (submission_type_code)
);

CREATE TABLE supplier_link
(
    supplier_link_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    ppg_id           VARCHAR(255),
    cas_id           VARCHAR(255),
    bravo_id         INTEGER,
    coh_number       VARCHAR(255),
    duns_number      VARCHAR(255),
    vat_number       VARCHAR(255),
    nhs_number       VARCHAR(255),
    created_by       VARCHAR(255),
    created_at       TIMESTAMP WITHOUT TIME ZONE,
    updated_by       VARCHAR(255),
    updated_at       TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_supplier_link PRIMARY KEY (supplier_link_id)
);

CREATE TABLE supplier_selections
(
    supplier_selection_id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    organisation_mapping_id INTEGER,
    event_id                INTEGER,
    created_by              VARCHAR(255),
    created_at              TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_supplier_selections PRIMARY KEY (supplier_selection_id)
);

CREATE TABLE supplier_submission_data
(
    supplier_submission_id      VARCHAR(255) NOT NULL,
    supplier_id                 VARCHAR(255),
    lot_id                      VARCHAR(255),
    assessment_tool_id          INTEGER,
    external_assessment_tool_id VARCHAR(255),
    assessment_tool_name        VARCHAR(255),
    submission_type_name        VARCHAR(255),
    dimension_name              VARCHAR(255),
    dimension_id                INTEGER,
    requirement_name            VARCHAR(255),
    submission_value            VARCHAR(255),
    CONSTRAINT pk_supplier_submission_data PRIMARY KEY (supplier_submission_id)
);

CREATE TABLE supplier_submissions
(
    supplier_submission_id       INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lot_requirement_taxon_id     INTEGER,
    dimension_submission_type_id INTEGER,
    submission_reference         VARCHAR(255),
    submission_value             INTEGER,
    created_by                   VARCHAR(255),
    created_at                   TIMESTAMP WITHOUT TIME ZONE,
    updated_by                   VARCHAR(255),
    updated_at                   TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_supplier_submissions PRIMARY KEY (supplier_submission_id)
);

CREATE TABLE task_history
(
    task_history_id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    task_id             BIGINT,
    scheduled_on        TIMESTAMP WITHOUT TIME ZONE,
    executed_on         TIMESTAMP WITHOUT TIME ZONE,
    task_history_status CHAR,
    task_node           VARCHAR(255),
    task_response       VARCHAR(255),
    created_by          VARCHAR(255),
    created_at          TIMESTAMP WITHOUT TIME ZONE,
    updated_by          VARCHAR(255),
    updated_at          TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_task_history PRIMARY KEY (task_history_id)
);

CREATE TABLE tasks
(
    task_id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    task_name        VARCHAR(255),
    task_object      VARCHAR(255),
    task_record_id   VARCHAR(255),
    principal        VARCHAR(255),
    task_executor    VARCHAR(255),
    task_data_type   VARCHAR(255),
    task_data        VARCHAR(255),
    scheduled_on     TIMESTAMP WITHOUT TIME ZONE,
    tobe_executed_at TIMESTAMP WITHOUT TIME ZONE,
    last_executed_on TIMESTAMP WITHOUT TIME ZONE,
    task_status      CHAR,
    task_node        VARCHAR(255),
    task_response    VARCHAR(255),
    created_by       VARCHAR(255),
    created_at       TIMESTAMP WITHOUT TIME ZONE,
    updated_by       VARCHAR(255),
    updated_at       TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_tasks PRIMARY KEY (task_id)
);

ALTER TABLE assessments
    ADD CONSTRAINT FK_ASSESSMENTS_ON_ASSESSMENT_TOOL FOREIGN KEY (assessment_tool_id) REFERENCES assessment_tools (assessment_tool_id);

ALTER TABLE assessment_dimension_criteria
    ADD CONSTRAINT FK_ASSESSMENT_DIMENSION_CRITERIA_ON_ASSESSMENT FOREIGN KEY (assessment_id) REFERENCES assessments (assessment_id);

ALTER TABLE assessment_dimension_criteria
    ADD CONSTRAINT FK_ASSESSMENT_DIMENSION_CRITERIA_ON_DIMENSION FOREIGN KEY (dimension_id) REFERENCES dimensions (dimension_id);

ALTER TABLE assessment_dimension_weighting
    ADD CONSTRAINT FK_ASSESSMENT_DIMENSION_WEIGHTING_ON_ASSESSMENT FOREIGN KEY (assessment_id) REFERENCES assessments (assessment_id);

ALTER TABLE assessment_dimension_weighting
    ADD CONSTRAINT FK_ASSESSMENT_DIMENSION_WEIGHTING_ON_DIMENSION FOREIGN KEY (dimension_id) REFERENCES dimensions (dimension_id);

ALTER TABLE assessment_results
    ADD CONSTRAINT FK_ASSESSMENT_RESULTS_ON_ASSESSMENT FOREIGN KEY (assessment_id) REFERENCES assessments (assessment_id);

ALTER TABLE assessment_selections
    ADD CONSTRAINT FK_ASSESSMENT_SELECTIONS_ON_ASSESSMENT FOREIGN KEY (assessment_id) REFERENCES assessments (assessment_id);

ALTER TABLE assessment_selections
    ADD CONSTRAINT FK_ASSESSMENT_SELECTIONS_ON_DIMENSION FOREIGN KEY (dimension_id) REFERENCES dimensions (dimension_id);

ALTER TABLE assessment_selections
    ADD CONSTRAINT FK_ASSESSMENT_SELECTIONS_ON_REQUIREMENT_TAXON FOREIGN KEY (requirement_taxon_id) REFERENCES requirement_taxons (requirement_taxon_id);

ALTER TABLE assessment_selection_details
    ADD CONSTRAINT FK_ASSESSMENT_SELECTION_DETAILS_ON_ASSESSMENT_SELECTION FOREIGN KEY (assessment_selection_id) REFERENCES assessment_selections (assessment_selection_id);

ALTER TABLE assessment_selection_details
    ADD CONSTRAINT FK_ASSESSMENT_SELECTION_DETAILS_ON_DIMENSION_SUBMISSION_TYPE FOREIGN KEY (dimension_submission_type_id) REFERENCES dimension_submission_types (dimension_submission_type_id);

ALTER TABLE assessment_selection_results
    ADD CONSTRAINT FK_ASSESSMENT_SELECTION_RESULTS_ON_ASSESSMENT_SELECTION_DETAIL FOREIGN KEY (assessment_selection_detail_id) REFERENCES assessment_selection_details (assessment_selection_detail_id);

ALTER TABLE assessment_taxons
    ADD CONSTRAINT FK_ASSESSMENT_TAXONS_ON_PARENT_ASSESSMENT_TAXON FOREIGN KEY (parent_assessment_taxon_id) REFERENCES assessment_taxons (assessment_taxon_id);

ALTER TABLE assessment_taxons
    ADD CONSTRAINT FK_ASSESSMENT_TAXONS_ON_SUBMISSION_GROUP FOREIGN KEY (submission_group_id) REFERENCES submission_group (submission_group_id);

ALTER TABLE assessment_tool_dimensions
    ADD CONSTRAINT FK_ASSESSMENT_TOOL_DIMENSIONS_ON_ASSESSMENT_TOOL FOREIGN KEY (assessment_tool_id) REFERENCES assessment_tools (assessment_tool_id);

ALTER TABLE assessment_tool_dimensions
    ADD CONSTRAINT FK_ASSESSMENT_TOOL_DIMENSIONS_ON_DIMENSION FOREIGN KEY (dimension_id) REFERENCES dimensions (dimension_id);

ALTER TABLE assessment_tool_submission_group
    ADD CONSTRAINT FK_ASSESSMENT_TOOL_SUBMISSION_GROUP_ON_ASSESSMENT_TOOL FOREIGN KEY (assessment_tool_id) REFERENCES assessment_tools (assessment_tool_id);

ALTER TABLE assessment_tool_submission_group
    ADD CONSTRAINT FK_ASSESSMENT_TOOL_SUBMISSION_GROUP_ON_SUBMISSION_GROUP FOREIGN KEY (submission_group_id) REFERENCES submission_group (submission_group_id);

ALTER TABLE contract_details
    ADD CONSTRAINT FK_CONTRACT_DETAILS_ON_EVENT FOREIGN KEY (event_id) REFERENCES procurement_events (event_id);

ALTER TABLE dimension_submission_types
    ADD CONSTRAINT FK_DIMENSION_SUBMISSION_TYPES_ON_DIMENSION FOREIGN KEY (dimension_id) REFERENCES dimensions (dimension_id);

ALTER TABLE dimension_submission_types
    ADD CONSTRAINT FK_DIMENSION_SUBMISSION_TYPES_ON_SUBMISSION_TYPE_CODE FOREIGN KEY (submission_type_code) REFERENCES submission_types (submission_type_code);

ALTER TABLE dimension_valid_values
    ADD CONSTRAINT FK_DIMENSION_VALID_VALUES_ON_DIMENSION FOREIGN KEY (dimension_id) REFERENCES dimensions (dimension_id);

ALTER TABLE document_template_sources
    ADD CONSTRAINT FK_DOCUMENT_TEMPLATE_SOURCES_ON_DOCUMENT_TEMPLATE FOREIGN KEY (document_template_id) REFERENCES document_templates (document_template_id);

ALTER TABLE document_uploads
    ADD CONSTRAINT FK_DOCUMENT_UPLOADS_ON_EVENT FOREIGN KEY (event_id) REFERENCES procurement_events (event_id);

ALTER TABLE lot_requirement_taxons
    ADD CONSTRAINT FK_LOT_REQUIREMENT_TAXONS_ON_LOT FOREIGN KEY (lot_id) REFERENCES submission_group (submission_group_id);

ALTER TABLE lot_requirement_taxons
    ADD CONSTRAINT FK_LOT_REQUIREMENT_TAXONS_ON_REQUIREMENT_TAXON FOREIGN KEY (requirement_taxon_id) REFERENCES requirement_taxons (requirement_taxon_id);

ALTER TABLE lot_requirement_taxons
    ADD CONSTRAINT FK_LOT_REQUIREMENT_TAXONS_ON_SUBMISSION_GROUP FOREIGN KEY (submission_group_id) REFERENCES submission_group (submission_group_id);

ALTER TABLE procurement_events
    ADD CONSTRAINT FK_PROCUREMENT_EVENTS_ON_PROJECT FOREIGN KEY (project_id) REFERENCES procurement_projects (project_id);

ALTER TABLE procurement_projects
    ADD CONSTRAINT FK_PROCUREMENT_PROJECTS_ON_ORGANISATION_MAPPING FOREIGN KEY (organisation_mapping_id) REFERENCES organisation_mapping (organisation_mapping_id);

ALTER TABLE project_user_mapping
    ADD CONSTRAINT FK_PROJECT_USER_MAPPING_ON_PROJECT FOREIGN KEY (project_id) REFERENCES procurement_projects (project_id);

ALTER TABLE question_and_answer
    ADD CONSTRAINT FK_QUESTION_AND_ANSWER_ON_EVENT FOREIGN KEY (event_id) REFERENCES procurement_events (event_id);

ALTER TABLE requirement_taxons
    ADD CONSTRAINT FK_REQUIREMENT_TAXONS_ON_ASSESSMENT_TAXON FOREIGN KEY (assessment_taxon_id) REFERENCES assessment_taxons (assessment_taxon_id);

ALTER TABLE requirement_taxons
    ADD CONSTRAINT FK_REQUIREMENT_TAXONS_ON_REQUIREMENT FOREIGN KEY (requirement_id) REFERENCES requirements (requirement_id);

ALTER TABLE requirement_taxons
    ADD CONSTRAINT FK_REQUIREMENT_TAXONS_ON_REQUIREMENT_TAXON FOREIGN KEY (requirement_taxon_id) REFERENCES requirements (requirement_id);

ALTER TABLE supplier_selections
    ADD CONSTRAINT FK_SUPPLIER_SELECTIONS_ON_EVENT FOREIGN KEY (event_id) REFERENCES procurement_events (event_id);

ALTER TABLE supplier_selections
    ADD CONSTRAINT FK_SUPPLIER_SELECTIONS_ON_ORGANISATION_MAPPING FOREIGN KEY (organisation_mapping_id) REFERENCES organisation_mapping (organisation_mapping_id);

ALTER TABLE supplier_submissions
    ADD CONSTRAINT FK_SUPPLIER_SUBMISSIONS_ON_DIMENSION_SUBMISSION_TYPE FOREIGN KEY (dimension_submission_type_id) REFERENCES dimension_submission_types (dimension_submission_type_id);

ALTER TABLE supplier_submissions
    ADD CONSTRAINT FK_SUPPLIER_SUBMISSIONS_ON_LOT_REQUIREMENT_TAXON FOREIGN KEY (lot_requirement_taxon_id) REFERENCES lot_requirement_taxons (lot_requirement_taxon_id);

ALTER TABLE task_history
    ADD CONSTRAINT FK_TASK_HISTORY_ON_TASK FOREIGN KEY (task_id) REFERENCES tasks (task_id);

ALTER TABLE assessment_dimension_submission_types
    ADD CONSTRAINT fk_assdimsubtyp_on_assessment_dimension_weighting FOREIGN KEY (assessment_dimension_weighting_id) REFERENCES assessment_dimension_weighting (assessment_dimension_weighting_id);

ALTER TABLE assessment_dimension_submission_types
    ADD CONSTRAINT fk_assdimsubtyp_on_dimension_submission_type FOREIGN KEY (dimension_submission_type_id) REFERENCES dimension_submission_types (dimension_submission_type_id);

ALTER TABLE audit_log
ALTER COLUMN log_id ADD GENERATED ALWAYS AS IDENTITY;